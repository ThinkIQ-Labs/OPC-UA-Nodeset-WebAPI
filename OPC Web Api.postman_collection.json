{
	"info": {
		"_postman_id": "3fdac277-c370-474e-8087-2f12a732335e",
		"name": "OPC Web Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "38182923"
	},
	"item": [
		{
			"name": "Project",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "Store",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Testing\",\r\n    \"owner\": \"Foo\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9001/api/v1/project",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"project"
									]
								}
							},
							"response": []
						},
						{
							"name": "Index",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/project",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"project"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Project By Id",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/project/611884f8",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"project",
										"611884f8"
									]
								}
							},
							"response": []
						},
						{
							"name": "Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/project/d6a0aba2",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"project",
										"d6a0aba2"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "The Projects serves as containers for the nodesets that are about to get process. We can remove, add, and get projects based on the API calls we are making."
		},
		{
			"name": "Local Nodeset",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "Local Nodesets",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/local-nodeset",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"local-nodeset"
									]
								}
							},
							"response": []
						},
						{
							"name": "Local Nodeset XML",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/local-nodeset/Opc.ISA95.NodeSet2.xml",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"local-nodeset",
										"Opc.ISA95.NodeSet2.xml"
									]
								}
							},
							"response": []
						},
						{
							"name": "Destroy",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/local-nodeset/Opc.ISA95.NodeSet2.xml",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"local-nodeset",
										"Opc.ISA95.NodeSet2.xml"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload XML From File Async",
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "file",
											"type": "file",
											"src": []
										}
									]
								},
								"url": {
									"raw": "localhost:9001/api/v1/local-nodeset",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"local-nodeset"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload XML From Base 64",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"FileName\": \"testing.xml\",\r\n    \"XmlBase64\": \"here\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9001/api/v1/local-nodeset/upload-xml-from-base-64",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"local-nodeset",
										"upload-xml-from-base-64"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Info XML From Base 64",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"FileName\": \"testing.xml\",\r\n    \"XmlBase64\": \"here\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9001/api/v1/local-nodeset/get-info-xml-from-base-64",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"local-nodeset",
										"get-info-xml-from-base-64"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "The Local Nodesets are OPC UA nodesets that are loaded into the Web OPC API and serve as a combiniant way to retrive information without having to fetch it from an external API."
		},
		{
			"name": "Nodeset Model",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "Loaded Nodeset Models per Project",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/nodeset-model?id=a2f614b5",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"nodeset-model"
									],
									"query": [
										{
											"key": "id",
											"value": "a2f614b5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Load XML From Server Async",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// #1. we need to load the this local nodeset into our project\r\n// {\r\n//     \"projectId\": \"84ba2c0d\",\r\n//     \"uri\": \"opcfoundation.org.UA.NodeSet2.xml\"\r\n// }\r\n\r\n// #2. Load this other noset\r\n// {\r\n//     \"projectId\": \"84ba2c0d\",\r\n//     \"uri\": \"opcfoundation.org.UA.DI.NodeSet2.xml\"\r\n// }\r\n\r\n// #3. Then go to the upload XML from base64 and load that other nodeset",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9001/api/v1/nodeset-model/load-xml-from-server-async",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"nodeset-model",
										"load-xml-from-server-async"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload XML From File Async",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"621d45ec\",\r\n    \"file\": \"opcfoundation.org.UA.NodeSet2.xml\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9001/api/v1/nodeset-model/upload-xml-from-file-async",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"nodeset-model",
										"upload-xml-from-file-async"
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload XML From Base 64",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "// #4. then we are going to upload these and the other XML down in the raw body\r\n\r\n// {\r\n//     \"projectId\": \"1c2348cd\",\r\n//     \"fileName\": \"temp.xml\",\r\n//     \"xmlBase64\":    \"\"\r\n// }\r\n\r\n\r\n// #5. Here is the last nodeset we are going to upload into the project.\r\n\r\n{\r\n    \"projectId\": \"8a907469\",\r\n    \"fileName\": \"temp.xml\",\r\n    \"xmlBase64\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9001/api/v1/nodeset-model/upload-xml-from-base-64",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"nodeset-model",
										"upload-xml-from-base-64"
									]
								}
							},
							"response": []
						},
						{
							"name": "Put Async",
							"request": {
								"method": "PUT",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/nodeset-model",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"nodeset-model"
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate XML",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"projectId\": \"\",\r\n    \"uri\": \"\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:9001/api/v1/nodeset-model/generate-xml",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"nodeset-model",
										"generate-xml"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "Here we load both the internal nodesets, or the base64 Nodesets that were fetch from an external API endpoint, for example from CESMII's Marketplace or the OPC UA library.\n\nAlso, we can Locally load the nodeset files that we have stored in the API service.\n\n**IMPORTANT:** If we try to load a Nodeset without resolving its dependencies first, we are going to get an error telling us that the required Nodesets haven't been loaded into the project. So we are force to resolved those dependencies first."
		},
		{
			"name": "Object Type",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "Object Type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/object-type/6f2caa83/http:opcfoundation.orgUA",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"object-type",
										"6f2caa83",
										"http:opcfoundation.orgUA"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Data Variable",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "Data Variable",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/data-variable/8a907469/http:opcfoundation.orgUA",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"data-variable",
										"8a907469",
										"http:opcfoundation.orgUA"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Properties",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "Property",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/property/6f2caa83/http:opcfoundation.orgUA",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"property",
										"6f2caa83",
										"http:opcfoundation.orgUA"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Data Type",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "Data Type",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/data-type/6f2caa83/http:opcfoundation.orgUA",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"data-type",
										"6f2caa83",
										"http:opcfoundation.orgUA"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Variable Type",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "New Request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/variable-type/6f2caa83/http:opcfoundation.orgUA",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"variable-type",
										"6f2caa83",
										"http:opcfoundation.orgUA"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Objects",
			"item": [
				{
					"name": "v1",
					"item": []
				},
				{
					"name": "Object",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:9001/api/v1/object/8a907469/http:opcfoundation.orgUA",
							"host": [
								"localhost"
							],
							"port": "9001",
							"path": [
								"api",
								"v1",
								"object",
								"8a907469",
								"http:opcfoundation.orgUA"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Project Dictionary",
			"item": [
				{
					"name": "v1",
					"item": [
						{
							"name": "New Request",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:9001/api/v1/project-dictionary/84ba2c0d/http:opcfoundation.orgUA",
									"host": [
										"localhost"
									],
									"port": "9001",
									"path": [
										"api",
										"v1",
										"project-dictionary",
										"84ba2c0d",
										"http:opcfoundation.orgUA"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"description": "This endpoint combines object types, data variables, properties, variable types, data types, and objects within a specific project's namespace."
		}
	]
}